# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test CICD

on:
  push:
    branches: ['test']

permissions:
  checks: write
  contents: write
  pull-requests: write
  deployments: write

env:
  REDIS_PORT: demo
  REDIS_HOST: demo
  RABBITMQ_URL: demo
  BOT_TELEGRAM_TOKEN: demo
  BOT_TELEGRAM_CHAT_ID: demo
  MONGODB_URL: demo

jobs:
  preview_client:
    runs-on: ubuntu-22.04
    env:
      VITE_FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'
      VITE_FIREBASE_AUTH_DOMAIN: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'
      VITE_FIREBASE_PROJECT_ID: '${{ secrets.FIREBASE_PROJECT_ID }}'
      VITE_FIREBASE_STORAGE_BUCKET: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'
      VITE_FIREBASE_MESS_SENDER_ID: '${{ secrets.FIREBASE_MESS_SENDER_ID }}'
      VITE_FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
      VITE_FIREBASE_MEASUREMENT_ID: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
      VITE_FIREBASE_DATABASE_URL: '${{ secrets.FIREBASE_DATABASE_URL }}'
      VITE_PAGE_SIZE: '${{ secrets.PAGE_SIZE }}'

      VITE_MODE: 'dev'
      VITE_API_URL: 'https://vnoi-server-staging.undefine.tech'
    defaults:
      run:
        working-directory: ./client/
    permissions:
      contents: read
      deployments: write
    outputs:
      preview_url: ${{ steps.getPreviewUrl.outputs.PREVIEW_URL }}
      client_staging_status: ${{ steps.deploy_client.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create serviceAccount.json
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 -d > serviceAccount.json

      - name: Print environment variables
        run: printenv

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ matrix.node-version }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ matrix.node-version }}-

      - name: Install dependencies
        run: pnpm install

      - name: Build client
        run: pnpm build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1.5.0
        id: deploy_client
        with:
          branch: staging
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          projectName: vnoi-client
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: ./client/
          directory: ./dist
          wranglerVersion: '3'

      - name: Save build deploy to production
        uses: actions/upload-artifact@v4
        with:
          name: artifact-vnoi-client-build
          path: ./client/dist/

      - name: Get preview URL
        id: getPreviewUrl
        run: |
          echo "PREVIEW_URL=${{ steps.deploy_client.outputs.url }}" >> $GITHUB_ENV

  deploy_client:
    runs-on: ubuntu-22.04
    needs: preview_client
    env:
      VITE_FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'
      VITE_FIREBASE_AUTH_DOMAIN: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'
      VITE_FIREBASE_PROJECT_ID: '${{ secrets.FIREBASE_PROJECT_ID }}'
      VITE_FIREBASE_STORAGE_BUCKET: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'
      VITE_FIREBASE_MESS_SENDER_ID: '${{ secrets.FIREBASE_MESS_SENDER_ID }}'
      VITE_FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
      VITE_FIREBASE_MEASUREMENT_ID: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
      VITE_FIREBASE_DATABASE_URL: '${{ secrets.FIREBASE_DATABASE_URL }}'
      VITE_PAGE_SIZE: '${{ secrets.PAGE_SIZE }}'

      VITE_MODE: 'production'
      VITE_API_URL: 'https://vnoiou-server.undefine.tech'
    permissions:
      contents: read
      deployments: write
    outputs:
      preview_url: ${{ steps.getPreviewUrl.outputs.PREVIEW_URL }}
      client_staging_status: ${{ steps.deploy_client.outcome }}
    steps:
      - name: Print environment variables
        run: printenv

      - name: Get artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-vnoi-client-build
          path: ./client

      - name: List files
        run: |
          pwd
          ls -l client

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1.5.0
        id: deploy_client
        with:
          branch: main
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          projectName: vnoi-client
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: ./client
          directory: dist
          wranglerVersion: '3'
