name: vnoi-backend
services:
  gateway:
    container_name: server-gateway
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    image: lehodev/vnoi-backend-gateway:${GATEWAY_IMAGE_TAG}
    ports:
      - "9000:9000"
    expose:
      - "9000"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./gateway/.env.docker
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  common:
    container_name: server-common
    build:
      context: .
      dockerfile: ./common/Dockerfile
    image: lehodev/vnoi-backend-common:${COMMON_IMAGE_TAG}
    expose:
      - "9001"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./common/.env.docker
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  user:
    container_name: server-user
    build:
      context: .
      dockerfile: ./user/Dockerfile
    image: lehodev/vnoi-backend-user:${USER_IMAGE_TAG}
    expose:
      - "9002"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./user/.env.docker
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  exercise:
    container_name: server-exercise
    build:
      context: .
      dockerfile: ./exercise/Dockerfile
    image: lehodev/vnoi-backend-exercise:${EXERCISE_IMAGE_TAG}
    expose:
      - "9003"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./exercise/.env.docker
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  media:
    container_name: server-media
    build:
      context: .
      dockerfile: ./media/Dockerfile
    image: lehodev/vnoi-backend-media:${MEDIA_IMAGE_TAG}
    expose:
      - "9004"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./media/.env.docker
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  learning:
    container_name: server-learning
    build:
      context: .
      dockerfile: ./learning/Dockerfile
    image: lehodev/vnoi-backend-learning:${LEARNING_IMAGE_TAG}
    expose:
      - "9005"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./learning/.env.docker
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  statistics:
    container_name: server-statistics
    build:
      context: .
      dockerfile: ./statistics/Dockerfile
    image: lehodev/vnoi-backend-statistics:${STATISTICS_IMAGE_TAG}
    expose:
      - "9006"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./statistics/.env.docker
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  logging:
    container_name: server-logging
    build:
      context: .
      dockerfile: ./logging/Dockerfile
    image: lehodev/vnoi-backend-logging:${LOGGING_IMAGE_TAG}
    expose:
      - "9007"
    restart: on-failure
    env_file:
      - .env.all.docker
      - ./logging/.env.docker
    volumes:
      - log-data:/app/logging/logs
    depends_on:
      amqp-rabbitmq:
        condition: service_healthy
      db-mongo:
        condition: service_healthy
    networks:
      - vnoi-backend

  db-mongo:
    container_name: db-mongo
    image: mongo
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    volumes:
      - db-mongo-data:/data/db
    networks:
      - vnoi-backend

  amqp-rabbitmq:
    container_name: amqp-rabbitmq
    image: rabbitmq:3.12-management
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_PASS=
      - RABBITMQ_DEFAULT_USER=
      - RABBITMQ_DEFAULT_VHOST=
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    volumes:
      - db-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - vnoi-backend

volumes:
  db-mongo-data:
    name: "vnoi-mongo"
    driver: local
    driver_opts:
      type: none
      o: bind
      device: D:/DATA/vnoi-microservice/mongodb-data
  db-rabbitmq-data:
    name: "vnoi-rabbitmq"
    driver: local
    driver_opts:
      type: none
      o: bind
      device: D:/DATA/vnoi-microservice/rabbitmq-data
  log-data:
    name: "vnoi-log"
    driver: local
    driver_opts:
      type: none
      o: bind
      device: D:/DATA/vnoi-microservice/log-data

networks:
  vnoi-backend:
    name: vnoi-backend
    driver: bridge
